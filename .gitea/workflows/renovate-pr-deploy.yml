name: Renovate PR Deployment

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - "**/docker-compose*.yml"

env:
  VAULT_ADDR: ${{ secrets.TREZ_VAULT_ADDR }}
  VAULT_TOKEN: ${{ secrets.VAULT_GITEA_TOKEN }}
  HC_VAULT_VERSION: "1.20.4"

jobs:
  deploy:
    name: Renovate PR Deployment
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.user.login == 'renovate-bot'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Find docker-compose YAML files
        id: find-compose-files
        run: |
          COMPOSE_FILES=$(find . -type f -name "docker-compose*.yml" \
            -a ! -name "*windows*" \
            -a ! -name "*gui*" \
            -a ! -name "*macos*" \
            -a ! -name "*hivemind*" \
            -a ! -name "*server*" \
            | sort)
          echo "compose_files=$COMPOSE_FILES" >> "$GITHUB_OUTPUT"
          echo "Found Compose files:"
          echo "$COMPOSE_FILES"

      - name: Generate combined service list
        run: |
          echo "[]" > combined_services.json
          for f in ${{ steps.find-compose-files.outputs.compose_files }}; do
            echo "Processing $f"
            yq '.services | to_entries | map({"service": .key, "image": .value.image})' "$f" \
              >> temp_services.json
          done

          # Merge all service arrays into one
          jq -s add temp_services.json | jq 'unique_by(.service)' > services.json

      - name: Generate Markdown Table
        uses: gazab/create-markdown-table@6686233d7008e8d8b9d4bbdbfd1fb1ae510019f0 # v1.0.7
        id: service-table
        with:
          file: ./services.json

      - name: Regenerate README
        run: |
          echo "# List of Services" > README.md
          echo -e "\n\n" >> README.md
          echo "${{ steps.service-table.outputs.table }}" >> README.md

      - name: Add/Commit README.md
        id: commit-readme
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          message: "chore: Update README"
          add: "README.md"

      - name: Get changed services from all Compose files.
        id: services
        run: |
          echo "Getting services from main and ${{ github.ref_name }}"

          # Dynamically find all docker-compose YAML files (root + compose folder)
          COMPOSE_FILES=($(find . -type f -name 'docker-compose*.yml' | sort))

          echo "Found Compose files:"
          printf '%s\n' "${COMPOSE_FILES[@]}"

          # Temp files to store all services
          touch services_main_all.txt services_head_all.txt

          for f in "${COMPOSE_FILES[@]}"; do
            echo "Processing $f"

            # Create a safe filename by replacing slashes with underscores
            safe_f=$(echo "$f" | sed 's|[./]|_|g')

            # Fetch main version
            git show origin/main:"$f" > "main_${safe_f}" 2>/dev/null || touch "main_${safe_f}"
            cp "$f" "head_${safe_f}"

            # Extract services and append to global list
            yq '.services | keys | .[]' "main_${safe_f}" >> services_main_all.txt 2>/dev/null || true
            yq '.services | keys | .[]' "head_${safe_f}" >> services_head_all.txt 2>/dev/null || true
          done

          # Sort and deduplicate
          sort -u services_main_all.txt -o services_main_all.txt
          sort -u services_head_all.txt -o services_head_all.txt

          echo "Creating list of modified services..."
          touch service_changes.txt

          # Added services
          comm -13 services_main_all.txt services_head_all.txt | while read service; do
            echo "$service: added" >> service_changes.txt
          done

          # Modified services (parallelized)
          comm -12 services_main_all.txt services_head_all.txt | xargs -n1 -P4 -I{} bash -c '
            service="{}"
            modified=0
            for f in "${COMPOSE_FILES[@]}"; do
              safe_f=$(echo "$f" | sed "s|[./]|_|g")
              yq ".services[\"$service\"]" "main_${safe_f}" > tmp_main.yml 2>/dev/null || continue
              yq ".services[\"$service\"]" "head_${safe_f}" > tmp_head.yml 2>/dev/null || continue
              if ! diff -q tmp_main.yml tmp_head.yml > /dev/null; then
                modified=1
                break
              fi
            done
            if [[ $modified -eq 1 ]]; then
              echo "$service: modified" >> service_changes.txt
            fi
          '

          echo "Detected service changes:"
          cat service_changes.txt

          if [[ -z $(cat service_changes.txt) ]]; then
            echo "watchtower" > service_changes.txt
            echo "Placeholder:"
            cat service_changes.txt
          fi

          mod_svcs=$(cut -d':' -f1 service_changes.txt | sort | uniq | tr '\n' ' ' | sed 's/ *$//')
          echo "docker_svc_list<<EOF" >> "$GITHUB_OUTPUT"
          echo "$mod_svcs" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: List of Services for (Re)Deployment
        run: |
          echo -e "${{ steps.services.outputs.docker_svc_list }}"

      - name: Get list of Compose files
        id: compose_file_list
        run: |
          compose_list=$(find . -type f -name "docker-compose*.yml" \
            -a ! -name "*windows*" \
            -a ! -name "*gui*" \
            -a ! -name "*macos*" \
            -a ! -name "*hivemind*" \
            -a ! -name "*server*" \
            | sed -e ':a;N;$!ba;s/[\r\n]/ /g')

          echo "compose_list=$compose_list" >> "$GITHUB_OUTPUT"
          echo "Compose files: $compose_list"

      - name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        env:
          DOCKER_HOST: tcp://192.168.1.252:2375
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        env:
          DOCKER_HOST: tcp://192.168.1.252:2375
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_LOGIN_TOKEN }}

      - name: Login to Private Gitea Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        env:
          DOCKER_HOST: tcp://192.168.1.252:2375
        with:
          registry: git.trez.wtf
          username: ${{ secrets.BOT_GITEA_USER }}
          password: ${{ secrets.BOT_GITEA_PASSWORD }}

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: "${{ secrets.RUNNER_GOTIFY_URL }}"
          gotify_app_token: "${{ secrets.RUNNER_GOTIFY_TOKEN }}"
          notification_title: "GITEA: [RENOVATE] Docker Compose Deployment @ Benedikta"
          notification_message: "Starting Docker Compose run..."

      - name: Generate .env from Hashicorp Vault
        uses: https://git.trez.wtf/Trez/hc-vault-env@main
        with:
          HC_VAULT_VERSION: ${{ env.HC_VAULT_VERSION }}
          HC_VAULT_ADDR: ${{ secrets.TREZ_VAULT_ADDR }}
          HC_VAULT_USERNAME: ${{ secrets.VAULT_GITEA_USER }}
          HC_VAULT_PASSWORD: ${{ secrets.VAULT_GITEA_PASSWORD }}
          HC_VAULT_SECRETS_PATH: benedikta-docker/env

      - name: Docker Compose Deployment
        uses: cssnr/stack-deploy-action@d58b92bcd776afc57ef12f55bafff71200fd218e # v1.4.0
        with:
          mode: compose
          file: ${{ steps.compose_file_list.outputs.compose_list }}
          name: "ovosmisc"
          host: 192.168.1.250
          user: ovos
          ssh_key: ${{ secrets.RUNNER_SSH_PRIVATE_KEY }}
          args: --remove-orphans ${{ steps.services.outputs.docker_svc_list }}
          env_file: ".env"
          summary: true

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: "${{ secrets.RUNNER_GOTIFY_URL }}"
          gotify_app_token: "${{ secrets.RUNNER_GOTIFY_TOKEN }}"
          notification_title: "GITEA: [RENOVATE] Docker Compose Deployment @ Benedikta"
          notification_message: "Deployment completed successfully."
